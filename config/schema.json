{
  "$schema": "https://json-schema.org/draft-07/schema",
  "$id": "https://hashicorp.com/schemas/consul-ecs",
  "title": "Consul ECS Configuration",
  "description": "These are the top-level fields for the Consul ECS configuration format.",
  "type": "object",
  "properties": {
    "logLevel": {
      "description": "Sets the log level for `consul-ecs control-plane` and `consul-ecs controller` commands. Defaults to `INFO`.",
      "type": ["string", "null"],
      "enum": ["TRACE", "DEBUG", "INFO", "WARN", "ERROR", null]
    },
    "bootstrapDir": {
      "description": "The directory at which to mount the shared volume where Envoy bootstrap configuration is written by `consul-ecs control-plane`.",
      "type": "string",
      "minLength": 1
    },
    "controller": {
      "description": "Configuration for the `consul-ecs controller` command.",
      "type": "object",
      "properties": {
        "iamRolePath": {
          "description": "IAM roles at this path will be trusted by the Consul IAM auth method configured by the controller. Defaults to `/consul-ecs/`.",
          "type": ["string", "null"]
        },
        "partitionsEnabled": {
          "description": "Enables support for Consul partitions and namespaces [Consul Enterprise].",
          "type": ["boolean", "null"]
        },
        "partition": {
          "description": "The Consul partition name that the controller will use. Defaults to the `default` partition [Consul Enterprise].",
          "type": ["string", "null"]
        }
      },
      "additionalProperties": false
    },
    "consulServers": {
      "description": "Configuration for the Consul servers.",
      "type": "object",
      "properties": {
        "hosts": {
          "description": "The Consul server hosts. This can be an IP or hostname, or an exec command, such as `exec=<cmd>`. The exec command should return a list of IP addresses.",
          "type": "string"
        },
        "https": {
          "description": "Whether to use HTTPS connections to the `consulServers.hosts`. Defaults to true.",
          "type": ["boolean", "null"]
        },
        "httpPort": {
          "description": "The Consul server HTTP(S) port. Defaults to 8501",
          "type": ["integer", "null"]
        },
        "grpcPort": {
          "description": "The Consul server gRPC port. Defaults to 8502",
          "type": ["integer", "null"]
        },
        "caCertFile": {
          "description": "The Consul server CA cert file for HTTPS and GRPC.",
          "type": ["string", "null"]
        }
      },
      "required": ["hosts"],
      "additionalProperties": false
    },
    "consulHTTPAddr": {
      "description": "The HTTP(S) URL of the Consul server. Required when `authMethod.enabled` is set",
      "type": ["string", "null"]
    },
    "consulCACertFile": {
      "description": "The file path of the Consul server CA certificate.",
      "type": ["string", "null"]
    },
    "consulLogin": {
      "description": "Configuration for logging into the AWS IAM auth method.",
      "type": ["object", "null"],
      "properties": {
        "enabled": {
          "description": "Enables logging into Consul's AWS IAM auth method to obtain an ACL token. The auth method must be configured on the Consul server and the ECS task role must be trusted by the auth method. After logging in, the token is written to the file `<bootstrapDir>/service-token`.",
          "type": ["boolean", "null"]
        },
        "method": {
          "description": "The name of Consul auth method. This is passed as the `-method` option to the `consul login` command. Defaults to `iam-ecs-service-token`.",
          "type": ["string", "null"]
        },
        "includeEntity": {
          "description": "Adds the `-aws-include-entity` flag to the `consul login` command. Defaults to `true`. Set to `false` to remove the flag from the command. The `-aws-include-entity` flag should only be passed if the Consul AWS IAM auth method is configured with `EnableIAMEntityDetails=true`.",
          "type": ["boolean", "null"]
        },
        "extraLoginFlags": {
          "description": "Additional CLI flags to pass to the `consul login` command. These are appended to the command `consul login -type aws -method <name> -token-sink-file <file> -aws-auto-bearer-token -aws-include-identity`.",
          "type": ["array", "null"],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "healthSyncContainers": {
      "description": "The names of containers that will have health check status synced from ECS into Consul by the `consul-ecs control-plane` command.",
      "type": ["array", "null"],
      "items": {
        "type": "string"
      },
      "uniqueItems": true
    },
    "service": {
      "description": "Configuration for Consul service registration.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name the service will be registered as in Consul. Defaults to the Task family name if empty or null.",
          "type": ["string", "null"],
          "pattern": "(^$)|(^[a-z0-9]([a-z0-9-_]*[a-z0-9])?$)"
        },
        "tags": {
          "description": "List of string values that can be used to add service-level labels.",
          "type": ["array", "null"],
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "port": {
          "description": "Port the application listens on, if any.",
          "type": "integer"
        },
        "enableTagOverride": {
          "description": "Determines if the anti-entropy feature for the service is enabled",
          "type": ["boolean", "null"]
        },
        "meta": {
          "description": "Key-value pairs of metadata to include for the Consul service.",
          "type": ["object", "null"],
          "patternProperties": {
            ".*": {
              "type": "string"
            }
          }
        },
        "weights": {
          "description": "Configures the weight of the service in terms of its DNS service (SRV) response.",
          "type": ["object", "null"],
          "properties": {
            "passing": {
              "description": "Weight for the service when its health checks are passing.",
              "type": "integer"
            },
            "warning": {
              "description": "Weight for the service when it has health checks in `warning` status.",
              "type": "integer"
            }
          },
          "required": ["passing", "warning"],
          "additionalProperties": false
        },
        "namespace": {
          "description": "The Consul namespace where the service will be registered [Consul Enterprise].",
          "type": ["string", "null"]
        },
        "partition": {
          "description": "The Consul admin partition where the service will be registered [Consul Enterprise].",
          "type": ["string", "null"]
        }
      },
      "required": ["port"],
      "additionalProperties": true
    },
    "proxy": {
      "description": "Configuration for the sidecar proxy registration with Consul.",
      "type": ["object", "null"],
      "properties": {
        "config": {
          "description": "Object value that specifies an opaque JSON configuration. The JSON is stored and returned along with the service instance when called from the API.",
          "type": ["object", "null"]
        },
        "upstreams": {
          "description": "The list of the upstream services that the proxy should create listeners for.",
          "type": ["array", "null"],
          "items": {
            "description": "The list of the upstream services that the proxy should create listeners for. Each `upstream` object may contain the following fields.",
            "type": "object",
            "properties": {
              "destinationType": {
                "description": "Specifies the type of discovery query the proxy should use for finding service mesh instances.",
                "type": ["string", "null"],
                "enum": ["service", "prepared_query", null]
              },
              "destinationNamespace": {
                "description": "Specifies the namespace containing the upstream service [Consul Enterprise].",
                "type": ["string", "null"]
              },
              "destinationPartition": {
                "description": "Specifies the name of the admin partition containing the upstream service [Consul Enterprise].",
                "type": ["string", "null"]
              },
              "destinationName": {
                "description": "Specifies the name of the upstream service or prepared query to route the service mesh to.",
                "type": "string"
              },
              "datacenter": {
                "description": "Specifies the datacenter to issue the discovery query to.",
                "type": ["string", "null"]
              },
              "localBindAddress": {
                "description": "Specifies the address to bind a local listener to.",
                "type": ["string", "null"]
              },
              "localBindPort": {
                "description": "Specifies the port to bind a local listener to. The application will make outbound connections to the upstream from the local port.",
                "type": "integer"
              },
              "config": {
                "description": "Specifies opaque configuration options that will be provided to the proxy instance for the upstream.",
                "type": ["object", "null"]
              },
              "meshGateway": {
                "description": "Specifies the mesh gateway configuration for the proxy for this upstream.",
                "type": ["object", "null"],
                "properties": {
                  "mode": {
                    "description": "Specifies how the upstream with a remote destination datacenter gets resolved.",
                    "type": "string",
                    "enum": ["none", "local", "remote"]
                  }
                },
                "required": ["mode"]
              }
            },
            "required": ["destinationName", "localBindPort"],
            "additionalProperties": false
          }
        },
        "meshGateway": {
          "description": "Specifies the mesh gateway configuration for the proxy.",
          "type": ["object", "null"],
          "properties": {
            "mode": {
              "description": "Specifies how upstreams with a remote destination datacenter are resolved.",
              "type": "string",
              "enum": ["none", "local", "remote"]
            }
          },
          "required": ["mode"]
        }
      },
      "expose": {
        "description": "Specifies a configuration for exposing HTTP paths through the proxy.",
        "type": ["object", "null"],
        "properties": {
          "checks": {
            "description": "If enabled, all HTTP and gRPC checks registered with the agent are exposed through Envoy.",
            "type": "boolean"
          },
          "paths": {
            "description": "A list of paths to expose through Envoy.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "listenerPort": {
                  "description": "The port where the proxy will listen for connections.",
                  "type": "integer"
                },
                "path": {
                  "description": "The HTTP path to expose. The path must be prefixed by a slash.",
                  "type": "string"
                },
                "localPathPort": {
                  "description": "The port where the local service is listening for connections to the path.",
                  "type": "integer"
                },
                "protocol": {
                  "description": "Sets the protocol of the listener.",
                  "enum": ["http", "http2"]
                }
              }
            }
          }
        }
      }
    },
    "gateway": {
      "description": "Configuration for the gateway proxy registration.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Specifies the type of gateway to register.",
          "type": "string",
          "enum": ["mesh-gateway"]
        },
        "lanAddress": {
          "description": "LAN address and port for the gateway. If not specified, defaults to the task/node address.",
          "type": ["object", "null"],
          "properties": {
            "address": {
              "type": ["string", "null"]
            },
            "port": {
              "type": ["integer", "null"]
            }
          },
          "additionalProperties": false
        },
        "wanAddress": {
          "description": "WAN address and port for the gateway. If not specified, defaults to the task/node address.",
          "type": ["object", "null"],
          "properties": {
            "address": {
              "type": ["string", "null"]
            },
            "port": {
              "type": ["integer", "null"]
            }
          },
          "additionalProperties": false
        },
        "name": {
          "description": "The name the gateway will be registered as in Consul. Defaults to the Task family name.",
          "type": ["string", "null"],
          "pattern": "(^$)|(^[a-z0-9]([a-z0-9-_]*[a-z0-9])?$)"
        },
        "tags": {
          "description": "List of string values that can be used to add labels to the gateway.",
          "type": ["array", "null"],
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "meta": {
          "description": "Key-value pairs of metadata to include for the gateway.",
          "type": ["object", "null"],
          "patternProperties": {
            ".*": {
              "type": "string"
            }
          }
        },
        "namespace": {
          "description": "Consul namespace in which the gateway will be registered [Consul Enterprise].",
          "type": ["string", "null"]
        },
        "partition": {
          "description": "Consul admin partition in which the gateway will be registered [Consul Enterprise].",
          "type": ["string", "null"]
        },
        "proxy": {
          "description": "Object that contains the proxy parameters.",
          "type": ["object", "null"],
          "properties": {
            "config": {
              "type": ["object", "null"]
            }
          }
        }
      },
      "required": ["kind"],
      "additionalProperties": false
    }
  },
  "required": ["bootstrapDir", "consulServers"],
  "additionalProperties": false
}
